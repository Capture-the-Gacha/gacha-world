services:
   
  player:
    hostname: ${PLAYER_HOST}
    build: ./services/Player
    depends_on:
      player-db:
        condition: service_healthy
    # TODO: Remove exposed port, only for testing purposes
    ports:
      - "5000:5000"
    env_file: .env
    secrets:
      - source: player-cert
        target: cert
      - source: player-key
        target: key
      - jwt-public-key

  player-db:
    image: mysql:5.7
    hostname: ${PLAYER_DB_HOST}
    env_file: .env
    restart: always
    ports:
      - "3306"
    volumes:
      - ase-player-db:/var/lib/mysql
      - .docker/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    secrets:
      - source: player-cert
        target: cert
      - source: player-key
        target: key
    healthcheck:
      test: mysql -h localhost -u root -p$MYSQL_ROOT_PASSWORD -e "USE ${MYSQL_DB}"
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 10s
    command: >
      mysqld
      --log-error-verbosity=1
      --ssl-cert=${CERT_PATH}
      --ssl-key=${KEY_PATH}
      --require_secure_transport=ON

  auction:
    hostname: ${AUCTION_HOST}
    build: ./services/Auction
    depends_on:
      auction-db:
        condition: service_healthy
    # TODO: Remove exposed port, only for testing purposes
    ports:
      - "5001:5000"
    env_file: .env
    secrets:
      - source: auction-cert
        target: cert
      - source: auction-key
        target: key
      - jwt-public-key
    
  auction-db:
    image: mysql:5.7
    hostname: ${AUCTION_DB_HOST}
    env_file: .env
    restart: always
    ports:
      - "3306"
    volumes:
      - ase-auction-db:/var/lib/mysql
      - .docker/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    secrets:
      - source: auction-cert
        target: cert
      - source: auction-key
        target: key
    healthcheck:
      test: mysql -h localhost -u root -p$MYSQL_ROOT_PASSWORD -e "USE ${MYSQL_DB}"
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 10s
    command: >
      mysqld
      --log-error-verbosity=1
      --ssl-cert=${CERT_PATH}
      --ssl-key=${KEY_PATH}
      --require_secure_transport=ON

  api-gateway:
    hostname: ${API_GATEWAY_HOST}
    build: ./services/Gateway
    depends_on:
      - player
      - auction
      - auth
    # TODO: Edit exposed port, only for testing purposes
    ports:
      - "5002:5000"
    env_file: .env
    secrets:
      - source: gateway-cert
        target: cert
      - source: gateway-key
        target: key
    healthcheck:
      test: curl -f https://${PLAYER_HOST}:5000 && curl -f https://${AUCTION_HOST}:5000
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 10s

  auth:
    hostname: ${AUTH_HOST}
    build: ./services/Auth
    depends_on:
      - auth-db
      - player
    # TODO: Remove exposed port, only for testing purposes
    ports:
      - "5003:5000"
    env_file: .env
    secrets:
      - source: auth-cert
        target: cert
      - source: auth-key
        target: key
      - jwt-public-key
      - jwt-private-key
      - mongo-root-password

  auth-db:
    hostname: ${AUTH_DB_HOST}
    image: mongo:latest
    ports:
      - '27017'
    volumes:
      - ctg-authdb:/data/db
      - ctg-authtmp:/data/configdb  
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo-root-password
      MONGO_INITDB_DATABASE: admin
    command: mongod --auth --quiet --logpath /dev/null
      --tlsAllowConnectionsWithoutCertificates
      --tlsMode preferTLS
      --tlsCertificateKeyFile /run/secrets/cert
      --tlsCAFile /run/secrets/cert
    secrets:
      - source: auth-mongo-fullchain
        target: cert
      - mongo-root-password


secrets:
  player-cert:
    file: ./certs/player-cert.pem
  player-key:
    file: ./certs/player-key.pem
  auction-cert:
    file: ./certs/auction-cert.pem
  auction-key:
    file: ./certs/auction-key.pem
  gateway-cert:
    file: ./certs/gateway-cert.pem
  gateway-key:
    file: ./certs/gateway-key.pem
  auth-cert:
    file: ./certs/auth-cert.pem
  auth-key:
    file: ./certs/auth-key.pem
  auth-mongo-fullchain:
    file: ./certs/auth-mongo-fullchain.pem
  mongo-root-password:
    file: ./secrets/mongo-root-password.txt
  jwt-public-key:
    file: ./secrets/jwt-public-key.pub
  jwt-private-key:
    file: ./secrets/jwt-private-key.pem
  

volumes:
  ase-player-db:
  ase-auction-db:
  ctg-authdb:
  ctg-authtmp: